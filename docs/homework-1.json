{"version":2,"kind":"Notebook","sha256":"0ca8ef118adb62905f2d0b742ef4fe436ca2fedfeaa2f4afc3e79a7157dc5d5d","slug":"homework-1","location":"/source/Homework 1.ipynb","dependencies":[],"frontmatter":{"title":"HOMEWORK I","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"github":"https://github.com/TheLittleRock/SZD","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/TheLittleRock/SZD/blob/dev/source/Homework 1.ipynb","exports":[{"format":"ipynb","filename":"Homework 1.ipynb","url":"/build/Homework 1-7d820a39f2a7ba083a7aecc017029872.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports and stuff","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wUJoaSl2oj"}],"identifier":"imports-and-stuff","label":"Imports and stuff","html_id":"imports-and-stuff","implicit":true,"key":"Ltsoo8j0Vx"}],"key":"qjmTfV8Q43"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.optimize import curve_fit\n%config InlineBackend.figure_formats = ['png']\nplt.rcParams['figure.dpi'] = 600\n\n#gauss distribution\ndef carl_friedrich(x,a,mu,sig):\n    return a * np.exp(-(x - mu)**2/(2*sig**2))","key":"G799zzNrg5"},{"type":"output","id":"9knsuOZcdXbMBcoRCZwcq","data":[],"key":"zvdK7CWuXW"}],"key":"tl9wUhbHQW"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Setting the parameters for matplotlib backend. Using TeX as backend for text.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"shDd85H60q"}],"key":"nBzQvF57vb"}],"key":"hvF86U7dGp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"params = {\n      'text.latex.preamble': r\"\\usepackage{mlmodern}\",\n      'legend.fontsize': 9,\n      'axes.labelsize': 9,\n      'axes.titlesize': 11,\n      'xtick.labelsize' :9,\n      'ytick.labelsize' : 9,\n      #'mathtext.fontset': 'cm',\n      #'mathtext.rm': 'stixsans',\n      'font.family' : 'mlmodern', \n      #'font.family' : 'sans-serif',\n      'text.usetex' : True,\n      }\nplt.rcParams.update(params)\n\n","key":"G0BSlUjGel"},{"type":"output","id":"86ZdrHOCA1Pub49N7Gp5t","data":[],"key":"uTDIOoEhRi"}],"key":"Y8vVBm8Oep"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Getting data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HUYneeInNZ"}],"identifier":"getting-data","label":"Getting data","html_id":"getting-data","implicit":true,"key":"m7YuMbUixV"}],"key":"NFvf8Ciboi"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Loading provided data and generating datasets based on parameters ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qJWYjuEWgk"},{"type":"text","value":"μ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MaQOlzjvxs"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"N2qPpaYiF0"},{"type":"text","value":"σ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lxoTLWGYvd"},{"type":"text","value":" of Gaussian distribution. Which bins are used as parameters for sampled gaussian distribution is given by ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lb91QR3eIa"},{"type":"inlineCode","value":"selected_bins","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vvWEQjTP2B"},{"type":"text","value":". Selected bins and their count can be changed and the code should still work.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ONefJTEXt5"}],"key":"CRSdxtRy3p"}],"key":"B7K9aVaXT2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"data = np.loadtxt(\"data/data.csv\", skiprows=1, delimiter=\",\") #load dataset\n\nselected_bins = [11,12,13,14,15,16,17] #bins from dataset to select for gaussian sampling\nbins = len(selected_bins) #number of selected bins\nsamples = 100000 #no. of samples taken\n\nhpp_samples, hAA_samples, ratios = [],[],[]\n\ndataSelected = np.take(data, selected_bins, axis=0) #select bins given by indexes from array selected_bins from data\n\nfor row in dataSelected:  #iterates over data. Data in format: [index | hpp | hpp_error | hAA | hAA_error] \n    \n    hAA = np.random.normal(row[3], row[4], samples) #randomly samples gaussian distribution with parameters gicen by data\n    hpp = np.random.normal(row[1], row[2], samples)\n\n    hpp_samples.append(hpp)\n    hAA_samples.append(hAA)\n    ratios.append(hAA/hpp)\n\n#_, hpp_mu, hpp_sig, hAA_mu, hAA_sig = dataSelected.T","key":"kxj0XVhMkF"},{"type":"output","id":"EhXfWIAZOaaIwHoenT6bI","data":[],"key":"QTJyalfBaR"}],"key":"GBpzjawJpn"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Fit","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"X0ama6j9s5"}],"identifier":"fit","label":"Fit","html_id":"fit","implicit":true,"key":"fLLyLVnliD"}],"key":"PU7un453JZ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"sigmaL, sigmaR, paramsL, paramsR, limits, xrange = [],[],[],[], [], []\n\nfor hist in ratios:\n    \n    vals, edges = np.histogram(hist,bins=50) #histogram from individual measurement values\n    centers = (edges[1:] + edges[:-1]) / 2 #calculation of center of bins\n    limit = np.argmax(vals) #index of bin with the maximum value\n\n    limits.append(limit)\n    xrange.append(centers)\n\n    popt, _ = curve_fit(carl_friedrich, centers[:limit+1], vals[:limit+1]) #left fit of the histogram using carl\n    sigmaL.append(popt[2])\n    paramsL.append(popt)\n    \n    popt, _ = curve_fit(carl_friedrich, centers[limit:], vals[limit:]) #right fit of the histogram using carl\n    sigmaR.append(popt[2])\n    paramsR.append(popt)","key":"jKZ1qAMraG"},{"type":"output","id":"201gBCEksTgo0hk6ECkO3","data":[],"key":"mU5WOQHaXI"}],"key":"Pnzz0tyBb9"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plotting","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BgMeuU3gRJ"}],"identifier":"plotting","label":"Plotting","html_id":"plotting","implicit":true,"key":"jyBm28OcFb"}],"key":"zYKYog37du"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig, axs = plt.subplots(bins, 3, layout=\"constrained\", figsize=(12, 2*bins))\n#fig.subplots_adjust(hspace=0, vspace=0) #graphs without spacing\n\nfor (col1, col2, col3), hAA, hpp, ratio, legend, pL, pR, x, limit in zip(axs, hAA_samples, hpp_samples, ratios, dataSelected, paramsL, paramsR, xrange, limits): #iteration through all of the data needed for plotting\n    \n    col1.hist(hAA, bins = 50, color='lightskyblue', edgecolor='dodgerblue', alpha=.8, label = '$\\mu = {:.1e}$ \\n $\\sigma = {:.1e}$'.format(legend[3],legend[4])) #col1 corresponds to hAA\n    col2.hist(hpp, bins = 50, color='seagreen', edgecolor='darkgreen', alpha=.8, label = '$\\mu = {:.1e}$ \\n $\\sigma = {:.1e}$'.format(legend[1],legend[2])) #col2 corresponds to hpp\n    col3.hist(ratio, bins = 50, color='lightcoral', edgecolor='dimgrey', alpha=.8) #col3 corresponds to Ratios\n\n    col3.plot(x[:limit+1], carl_friedrich(x[:limit+1],*pL),c='navy', lw=1, label = '$\\sigma_l = {:.2e}$'.format(np.abs(pL[2]))) #plot of the left fit\n    col3.plot(x[limit:], carl_friedrich(x[limit:],*pR), c='crimson', lw=1, label = '$\\sigma_r = {:.2e}$'.format(np.abs(pR[2]))) #plot of the right fit   \n    \n    col1.legend(loc=\"upper right\", fontsize=10, fancybox=False, borderpad=.2)\n    col2.legend(loc=\"upper right\", fontsize=10, fancybox=False, borderpad=.2)\n    col3.legend(loc=\"upper right\", fontsize=10, fancybox=False, borderpad=.2)\n    \n\naxs[0,0].set_title(\"hAA\")\naxs[0,1].set_title(\"hpp\")\naxs[0,2].set_title(\"Ratio\")\n\n#plt.savefig('output/hw1.svg')\nplt.show()","key":"XpGy2FLbVZ"},{"type":"output","id":"GUZXJYc9tXzgL40Yie0CH","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"0ba4b137cf14c4d5f562c92bec7dc331","path":"/build/0ba4b137cf14c4d5f562c92bec7dc331.png"},"text/plain":{"content":"<Figure size 7200x8400 with 21 Axes>","content_type":"text/plain"}}}],"key":"a4fgLfMp2L"}],"key":"wvHc8m1Tmq"}],"key":"CnaEeHAIYV"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"SZD HOMEWORKS","url":"/","group":"SZD HOMEWORKS"},"next":{"title":"HOMEWORK II","url":"/homework-2","group":"Source"}}},"domain":"http://localhost:3004"}